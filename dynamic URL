spring.mvc.pathmatch.matching-strategy: path_pattern_parser



@RestController
@RequestMapping("/resource")
public class ResourceController {

    @GetMapping("/{version:v\\d+(\\.\\d+)?(-[a-zA-Z0-9]+)?}/**")
    public ResponseEntity<String> handleVersionedResource(
            @PathVariable String version,
            HttpServletRequest request) {

        String uri = request.getRequestURI(); // e.g., /resource/v1.0.1/foo/bar
        String prefix = "/resource/" + version + "/";
        String remainingPath = uri.length() > prefix.length() ? uri.substring(prefix.length()) : "";

        return ResponseEntity.ok("Version: " + version + ", Path: " + remainingPath);
    }

    @GetMapping("/**")
    public ResponseEntity<String> handleUnversioned(HttpServletRequest request) {
        String uri = request.getRequestURI(); // e.g., /resource/foo/bar
        String remaining = uri.substring("/resource/".length());
        return ResponseEntity.ok("Unversioned path: " + remaining);
    }
}



@GetMapping("/resource/{id:[a-zA-Z0-9_-]+}")
public ResponseEntity<String> getResourceById(@PathVariable String id) {
    return ResponseEntity.ok("ID: " + id);
}




@RestController
public class ResourceController {

    @GetMapping("/resource/{version:v\\d+(\\.\\d+)?(-[a-zA-Z0-9]+)?}/{*path}")
    public ResponseEntity<String> handleResource(
            @PathVariable String version,
            @PathVariable("path") String path) {

        return ResponseEntity.ok("Version: " + version + ", Path: " + path);
    }
}




@RestController
public class ResourceController {

    @GetMapping("/resource/{version}/**")
    public ResponseEntity<String> handleResource(
            @PathVariable String version,
            HttpServletRequest request) {

        // Validate the version using regex
        if (!version.matches("v\\d+(\\.\\d+)?(-[a-zA-Z0-9]+)?")) {
            return ResponseEntity.badRequest().body("Invalid version format");
        }

        // Extract the remaining path after /resource/{version}/
        String fullPath = request.getRequestURI();
        String basePath = "/resource/" + version + "/";
        String optionalPath = fullPath.length() > basePath.length()
                ? fullPath.substring(basePath.length())
                : ""; // If there's no extra path

        return ResponseEntity.ok("Version: " + version + ", Path: " + optionalPath);
    }
}
